name: QASE Run tests
on:
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: 'Qase API URL'
        required: false
      qase_report:
        description: 'Enabled/disabled reporting to Qase'
        required: false
      qase_project_code: 
        description: 'Project CODE'
        required: true
      qase_run_id:
        description: 'Qase Run ID'
        required: true
      qase_run_complete:
        description: 'Complete Qase Run'
        required: true

env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}


jobs:   
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
  name: Run tests
    env:
      QASE_PROJECT_CODE: CODE
        QASE_API_TOKEN: ${{ secrets.QASE_TOKEN }}
      QASE_RUN_ID: ${{ steps.qase-run-create.outputs.id }}
    run: |
    npm test
      # Run tests here  

    
  name: Complete a Qase test run
    uses: qase-tms/gh-actions/run-complete
    id: complete
    # use always() to run even if test step failed or job was canceled
    # but don't run if creating a test run failed before this step
    if: always() && steps.qase-run-create.result == 'success'
    with:
      token: ${{ secrets.QASE_TOKEN }}
      project: CYP
      id: ${{ steps.qase-run-create.outputs.id }}
