on:
  workflow_dispatch:  # Trigger workflow manually

jobs:
  test-and-complete:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3  # Fetch repository code

      - name: Create a test run
        id: qase-run-create
        uses: your-qase-run-create-action@v1
        with:
          qase_api_base_url: ${{ inputs.qase_api_base_url }}
          qase_report: ${{ inputs.qase_report }}
          qase_project_code: ${{ inputs.qase_project_code }}

      - name: Run tests
        env:
          QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_RUN_ID: ${{ steps.qase-run-create.outputs.id }}  # Assuming output from action
        run: |
          npm test 

      - name: Complete a Qase test run
        id: complete
        uses: qase-tms/gh-actions/run-complete@vX  # Replace with specific version
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: CYP 
          id: ${{ steps.qase-run-create.outputs.id }}
        if: always() && steps.qase-run-create.outputs.result == 'success'  # Conditional run

env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}

workflow_dispatch:
  inputs:
    qase_api_base_url:
      description: 'Qase API URL'
      required: false
    qase_report:
      description: 'Enabled/disabled reporting to Qase'
      required: true
    qase_project_code:
      description: 'Project CODE'
      required: true
    qase_run_id:
      description: 'Qase Run ID'
      required: true
    qase_run_complete:
      description: 'Complete Qase Run'
      required: true  # If not used, consider removing
